#!/usr/bin/env node

import fs from 'fs';
import { runCommand } from '../../utils/helper';
import { logMessage } from '../../utils/logger';
import { getErrorLogFile } from '../../utils/config';
import { AndroidBuildMetadata } from '../../utils/types';

const METADATA_PATH = process.argv[2];
const DEVICE_ID = process.argv[3];

if (!METADATA_PATH) {
  logMessage('ERROR', 'Usage: ./run-android-tests.js <METADATA_JSON_FILE> [DEVICE_ID]');
  logMessage('ERROR', '  METADATA_JSON_FILE: Path to the metadata JSON file generated by build-android-app.js');
  logMessage('ERROR', '  DEVICE_ID: ADB device ID (optional)');
  process.exit(1);
}

async function installAndLaunchApp(): Promise<void> {
  logMessage('INFO', '\n=== Installing and Launching App ===\n');

  try {
    logMessage('INFO', 'Reading metadata file...');
    const metadata = JSON.parse(fs.readFileSync(METADATA_PATH, 'utf8')) as AndroidBuildMetadata;

    const packageName = metadata.packageName;
    const version = metadata.version;
    const apkPath = metadata.apkPath;
    const architecture = metadata.architecture;
    const ERROR_LOG_FILE = getErrorLogFile();

    logMessage('INFO', `Package name: ${packageName}`);
    logMessage('INFO', `Version: ${version}`);
    logMessage('INFO', `Architecture: ${architecture}`);

    if (!fs.existsSync(apkPath)) {
      const errorMsg = `APK not found at ${apkPath}`;
      logMessage('ERROR', errorMsg);
      process.exit(1);
    }

    logMessage('INFO', `\n=== Installing APK: ${apkPath} ===\n`);
    const deviceOption = DEVICE_ID ? `-s ${DEVICE_ID}` : '';
    runCommand(`adb ${deviceOption} install -r ${apkPath}`, ERROR_LOG_FILE);

    logMessage('INFO', `\n=== Launching app: ${packageName} ===\n`);
    runCommand(`adb ${deviceOption} shell am force-stop ${packageName}`, ERROR_LOG_FILE);

  } catch (error) {
    logMessage('ERROR', 'Installation failed', error);
    process.exit(1);
  }
}

installAndLaunchApp().catch(error => {
  logMessage('ERROR', 'Unhandled error in install and launch process', error);
  process.exit(1);
}); 